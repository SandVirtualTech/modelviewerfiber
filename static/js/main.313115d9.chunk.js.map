{"version":3,"sources":["components/NavBar.js","components/ActionButton.js","components/ModelViewer.js","components/Slider.js","components/ControlsButtons.js","components/AttachmentsColor.js","components/ShowSwitch.js","App.js","reportWebVitals.js","index.js"],"names":["a11yProps","index","id","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","ScrollableTabsButtonForce","classes","React","useState","value","setValue","className","AppBar","position","color","Tabs","onChange","event","newValue","console","log","variant","scrollButtons","indicatorColor","Tab","label","icon","Divider","orientation","ButtonGroup","Button","button","startIcon","margin","spacing","float","bottom","with","extendedIcon","marginRight","Box","props","ref","useRef","hovered","setHover","active","setActive","useFrame","current","rotation","x","y","scale","onClick","e","onPointerOver","onPointerOut","args","SceneBox","name","metalness","roughness","side","ModelViewer","intensity","angle","penumbra","valuetext","DiscreteSlider","Slider","defaultValue","getAriaValueText","valueLabelDisplay","step","marks","min","max","display","flexDirection","alignItems","BasicButtonGroup","IconButton","AttacmentsButton","SwitchLabels","checkedA","checkedB","state","setState","FormGroup","row","FormControlLabel","control","Switch","checked","target","App","Grid","container","direction","justifyContent","item","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mytheme","createTheme","type","primary","secondary","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.313115d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Divider } from '@material-ui/core';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    \r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst ScrollableTabsButtonForce = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  //const three = useThree();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    console.log(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n          \r\n        >\r\n            <Tab label=\"Front\" icon={<VideocamOutlinedIcon />} {...a11yProps(0)} />\r\n            <Tab label=\"Back\" icon={<VideocamOutlinedIcon />} {...a11yProps(1)} />\r\n            <Tab label=\"Left\" icon={<VideocamOutlinedIcon />} {...a11yProps(2)} />\r\n            <Tab label=\"Right\" icon={<VideocamOutlinedIcon />} {...a11yProps(3)} />\r\n            <Tab label=\"Top\" icon={<VideocamOutlinedIcon />} {...a11yProps(4)} />\r\n            <Tab label=\"Bottom\" icon={<VideocamOutlinedIcon />} {...a11yProps(5)} />\r\n            <Divider orientation=\"vertical\"/>\r\n            <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"outlined primary button group\">\r\n                <Button\r\n                    color='#1f1f1f'\r\n                    className={classes.button}\r\n                    startIcon={<VisibilityOffOutlinedIcon />}\r\n                    \r\n                    >\r\n                Hide Upper\r\n                </Button>\r\n                <Button\r\n                    color='#1f1f1f'\r\n                    className={classes.button}\r\n                    startIcon={<VisibilityOffOutlinedIcon />}\r\n                    >\r\n                Hide Lower\r\n                </Button>\r\n            </ButtonGroup>\r\n        </Tabs>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ScrollableTabsButtonForce;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      float: 'right',\r\n      bottom: theme.spacing(0),\r\n      with: '100%',\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FloatingActionButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab color='default' aria-label=\"add\">\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}","import React, { useRef, useState} from 'react'\r\nimport { Canvas, useFrame} from '@react-three/fiber'\r\n\r\n\r\nfunction Box(props) {\r\n  // This reference will give us direct access to the mesh\r\n  const ref = useRef()\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n  \r\n  \r\n  // Rotate mesh every frame, this is outside of React without overhead\r\n  useFrame(() => {\r\n    ref.current.rotation.x = ref.current.rotation.y += 0.01\r\n  })\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={ref}\r\n      scale={active ? 1.5 : 1}\r\n      onClick={(e) => {setActive(!active); console.log()}}\r\n      onPointerOver={(e) => setHover(true)}\r\n      onPointerOut={(e) => setHover(false)}>\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nfunction SceneBox(props) {\r\n  // This reference will give us direct access to the mesh\r\n\r\n  return (\r\n    <mesh\r\n    name=\"SceneCube\">\r\n      <boxGeometry args={[50, 50, 50]} />\r\n      <meshStandardMaterial color='#0F1F3F' metalness={0} roughness={0.5} side={1}/>\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport default function ModelViewer() {\r\n  return (\r\n    <div className='modelViewer'>\r\n      <Canvas>\r\n        <ambientLight intensity={0.5} />\r\n        <spotLight position={[10,10,10]} angle={0.10} penumbra={1} />\r\n        <pointLight position={[-10, -10, -10]} />\r\n        <SceneBox />\r\n        <Box name = \"Box A\" />\r\n      </Canvas>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n//import Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nexport default function DiscreteSlider() {\r\n\r\n  return (\r\n      <Slider\r\n        color=\"secondary\"\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={12}\r\n      />\r\n  );\r\n}","import React from 'react';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SkipPreviousOutlinedIcon from '@material-ui/icons/SkipPreviousOutlined';\r\nimport PlayArrowOutlinedIcon from '@material-ui/icons/PlayArrowOutlined';\r\nimport SkipNextOutlinedIcon from '@material-ui/icons/SkipNextOutlined';\r\n//import { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicButtonGroup() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup variant=\"text\" color=\"default\" aria-label=\"text primary button group\">\r\n        <IconButton aria-label=\"backward\">\r\n            <SkipPreviousOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"play\">\r\n            <PlayArrowOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"fordward\">\r\n            <SkipNextOutlinedIcon />\r\n        </IconButton>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n//import Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function AttacmentsButton() {\r\n  return (\r\n    <div>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<ColorLensOutlinedIcon />}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<ColorLensOutlinedIcon />}\r\n        />\r\n      </ButtonGroup>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function SwitchLabels() {\r\n    const [state, setState] = React.useState({\r\n      checkedA: true,\r\n      checkedB: true,\r\n    });\r\n  \r\n    const handleChange = (event) => {\r\n      setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n  \r\n    return (\r\n      <FormGroup row>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"secondary\"\r\n          />\r\n        }\r\n        label=\"Show\"\r\n      />\r\n      </FormGroup>\r\n    );\r\n  }","import './App.css';\nimport ScrollableTabsButtonForce from './components/NavBar'\nimport FloatingActionButtonZoom from './components/ActionButton'\nimport ModelViewer from './components/ModelViewer'\nimport DiscreteSlider from './components/Slider'\nimport BasicButtonGroup from './components/ControlsButtons'\nimport Grid from '@material-ui/core/Grid';\nimport AttacmentsButton from './components/AttachmentsColor'\nimport SwitchLabels from './components/ShowSwitch'\n\nfunction App() {\n  //console.log(ModelViewer.name);\n  return (\n    <div className=\"App\">\n      <ScrollableTabsButtonForce/>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item container md={10}>\n          <div className=\"gridRow\">\n            <ModelViewer/>\n            <br/>\n            <DiscreteSlider className=\"slider\" />\n            <DiscreteSlider className=\"slider\" />\n            <BasicButtonGroup/>\n          </div>\n            \n        </Grid>\n\n        <Grid item container md={2}>\n          <div className=\"gridRow\">\n            <h2>Patient info</h2>\n            <h3>Name</h3>\n            <p>Example Name</p>\n            <h3>Last Name</h3>\n            <p>Example Last Name</p>\n            <h3>E-mail</h3>\n            <p>name@example.com</p>\n            <br/>\n            <h2>Attachments</h2>\n            <p>Colors</p>\n            <AttacmentsButton/>\n            <br/>\n            <SwitchLabels/>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst mytheme = createTheme({\n  palette: {\n    type: 'dark',\n    palette: {\n      primary: '#1f1f1f',\n      secondary: {\n        main: '#ffffff',\n      },\n    },\n  },\n})\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={mytheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}